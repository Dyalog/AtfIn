 T←{S}∆txtrepl T;⎕IO;b;i;l;lbr;l0;l1;mask;n;p;pos;s;ss;t;up;A;C;NC;U;W;pat;L;P;K
⍝ 'S' is delimited list of search/replace items
 ⎕IO←0
⍝ prepare start/length of strings
 L←(1↓t,s)-W←1+t←t/⍳s←⍴t←S=1↑S
 K←'!'=S[W+L-1] ⍝ do we keep the case?
 L←L-K∨P←'*'=S[W+L-1] ⍝ is this a pattern?
⍝ Non-Overlapping search
⍝ T is text to search, S is search/replace items
⍝ p is 2 col of Position,pair #
 p←0 2⍴i←0 ⋄ n←1↑⍴W ⋄ mask←(NC←⍴T←,T)⍴0
⍝ This is a special case for ∆xfr: if the searched string has
⍝ ⎕ in it we search the uppercased version (for ⎕sys names)
 C←2 26⍴'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
 U←⎕FX((⍴U)↑'r←up t'),[-0.1]U←'r←(C[1;],t)[(C[0;],t)⍳t]'
⍝ When searching ⎕names we look for an exact match (⎕si≠⎕size)
⍝ unless the word ends with *
 U←(⊂T),(⊂l←up T) ⋄ A←l∊C[1;]
l10:l←L[i] ⋄ →(t←K[i]<'⎕'∊ss←S[W[i]+⍳l])↓l20 ⋄ ss←up ss
l20:
 pos←ss⍷⊃U[t] ⋄ →(t>P[i])↓l25 ⋄ pos←pos>NC↑l↓A
l25:pos←t/⍳⍴t←pos>mask
 t←~∨/mask[pos∘.+⍳l]
 pos←t/pos ⍝ some cannot be used for replacement
l30:→(∧/t←≤\pos≥¯1↓0,l+pos)/l40 ⋄ pos←t⌿pos ⋄ →l30
l40:p←p,[0]pos,[0.1]i ⋄ mask[pos∘.+⍳l]←1
l50:→(n>i←i+t←pos←2)/l10 ⋄ p←p[⍋p;]
⍝
⍝ W: which pairs to use; l1/l0: their lengths
 l1←L[1+t←p[;1]] ⋄ l0←L[t]
⍝ lbr: len BEFORE string to replace
 lbr←(b,⍴T)-0,l0+b←p[;0] ⋄ b←(2×⍴lbr)⍴1 0
⍝ size of not/replace portions: remove from 't'
 T←((,lbr,[0.1]l0,0)/b)/T
⍝ insert room for new string
 T←((,lbr,[0.1]l1,0)/b)\T
⍝ put in place (doing b/⍳⍴b might wsfull)
 b←⍳+/l1 ⋄ i←l1/W[1+p[;1]]-0,+\¯1↓l1
 T[b+l1/+\¯1↓lbr]←S[b+i]
